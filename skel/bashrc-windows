# emacs is the greatest OS ever
export VISUAL=emacs
export EDITOR="$VISUAL"

# Enable color support of ls
if [ "$TERM" != "dumb" ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto'
fi

# Share the current directory on port 8000
alias sharedir="python -m http.server 8000"

# Check the window size after each command and update the values of LINES and COLUMNS.
shopt -s checkwinsize

# Get keys from central dev server, save local authorized keys and append
alias get_keys='cd ~ && cp .ssh/authorized_keys .ssh/authorized_keys.orig && scp -r tallen@wrds-pub1-dev:~/.{ssh,aws,tokens,pypirc} . && git remote set-url origin git@github.com:FlipperPA/home.git && cat .ssh/authorized_keys.orig >> .ssh/authorized_keys'

# Dev environment shortcuts
devmanage() {
    ENV=dev python manage.py $*
}
alias dema=devmanage
alias dese='ENV=dev python manage.py runserver 0:8000'

# Local environment shortcuts
localmanage() {
    ENV=local python manage.py $*
}
alias loma=localmanage
alias lose='ENV=local python manage.py runserver 0:8000'

alias gitohshit='git reflog && echo "To revert: git reset HEAD@{index}"'
alias gitmerged='git branch --merged | egrep -v "(^\*|master|develop|stage)"'
alias gitmerged_delete='git branch --merged | egrep -v "(^\*|master|develop|stage)" | xargs git branch -d && git branch -r --merged | grep -v "(^\*|master|develop|stage)" | sed "s/origin\///" | xargs -n 1 git push --delete origin'
alias gitprunemerged="git branch -r --merged | grep -v 'master\|develop' | sed 's/origin\///' | xargs -n 1 git push --delete origin && git remote prune origin"
